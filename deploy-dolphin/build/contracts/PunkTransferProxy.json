{
  "contractName": "PunkTransferProxy",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "__OperatorRole_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "removeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes4",
                  "name": "assetClass",
                  "type": "bytes4"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct LibAsset.AssetType",
              "name": "assetType",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibAsset.Asset",
          "name": "asset",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"__OperatorRole_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"assetClass\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct LibAsset.AssetType\",\"name\":\"assetType\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct LibAsset.Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@rarible/transfer-proxy/contracts/punk/PunkTransferProxy.sol\":\"PunkTransferProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xb419e68addcb82ecda3ad3974b0d2db76435ce9b08435a04d5b119a0c5d45ea5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a85355cc4f2554f4a8d334336d66b48d616abf1d90ec3d6b602e825c6fe63f0c\",\"dweb:/ipfs/QmTJYtsKJjBy3ShAt4kEjvM6nfVS8ZAFQqE29fG16tUP8d\"]},\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"keccak256\":\"0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbc89479d30592e82442edc38053b380f611037a5e6ceafc7bf57a7aa1f0305\",\"dweb:/ipfs/QmcdYtt56WmjeYvsFjK69FnahnAriw88VzY3XRZwXkQKKN\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xfc5ea91fa9ceb1961023b2a6c978b902888c52b90847ac7813fe3b79524165f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b81dcc816857a9d981386f6d8de49198420ee41cdc0ecade366ab412174d03\",\"dweb:/ipfs/QmV2vznMT6m9qo3pFMAWi3Nz3UDhwesgwFxeXe6Tod3v8A\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xbbf8a21b9a66c48d45ff771b8563c6df19ba451d63dfb8380a865c1e1f29d1a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://062688aac76e27ab50157a9d645700cf92e3c0d51d3d860be1d2e1a0c04a87d0\",\"dweb:/ipfs/QmfXxppWAiSTeH8YNn2EtMPDgzrLeJ5rjRq8knEbje88mX\"]},\"@rarible/exchange-interfaces/contracts/ICryptoPunksMarket.sol\":{\"keccak256\":\"0xdde09eb30472fa2a29efedf32924395120060047f9288311548ce04e6c023fc8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0ccd6854dee97c465049c2e138a24644fdd00213f1b4713ed8043b26b550fa9\",\"dweb:/ipfs/QmQUEH2boiLEuEpp495MAGjrVWpPEHYNLKK5s6KAcevjyu\"]},\"@rarible/exchange-interfaces/contracts/ITransferProxy.sol\":{\"keccak256\":\"0xd9400959d0a108534601673e480a55c4e760e03211594e8123d9c19e5d3890ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b35890f8173983e3ac230df020cc51d79e36c53a7691a122b932bf780c6a20a\",\"dweb:/ipfs/QmbNkWijJ9xK9b1TrFXgmVvMxoxs3j1Hev6XLt3P6UBSsR\"]},\"@rarible/lib-asset/contracts/LibAsset.sol\":{\"keccak256\":\"0x5d63bba4747a12a83c5628dba94bf56714b4dcf94f742ff28863034831061c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826768c7f5c5423d9bbf49be50bd21ed2db5374ee47648150e50aa10e3c0151\",\"dweb:/ipfs/Qmex4xCv4MFRfCxMNZzzsKXYAFxbYWQRFsbaHiJfDTozYG\"]},\"@rarible/role-operator/contracts/OperatorRole.sol\":{\"keccak256\":\"0x1ea80d73e8d77f49f20b30f41c8808f97a052b34ca522b709a564eb0ba1cc376\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab5369e71d26a8e6db8aa0544efcf881104b57f7e0a4daf7fb48c66ea97d2ff6\",\"dweb:/ipfs/QmW8CM3QbTeip8knmJJ5pKGKtg74fmvZETWasrcj3G4NgH\"]},\"@rarible/transfer-proxy/contracts/punk/PunkTransferProxy.sol\":{\"keccak256\":\"0x6fc3c6e678176d3834da98de871c4e11c544d025fc798d8a8c4d30aaf30094f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b32234859028c68c5cc22c5a395321cb89ecb48b716decd45762386840a828c8\",\"dweb:/ipfs/QmPsHCrsrHWesE1RJXKxgsReC3mxpoEixMtsA1qMF1MiNm\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610b5e806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100a75780639870d7fe146100c5578063ac8a584a146100d8578063f2fde38b146100eb5761007d565b80632ff26a0a1461008257806354bc0cf11461008c578063715018a61461009f575b600080fd5b61008a6100fe565b005b61008a61009a3660046108a8565b6101b0565b61008a6103b2565b6100af61045e565b6040516100bc91906109ee565b60405180910390f35b61008a6100d336600461083c565b61046d565b61008a6100e636600461083c565b6104f3565b61008a6100f936600461083c565b610576565b600054610100900460ff16806101175750610117610679565b80610125575060005460ff16155b6101605760405162461bcd60e51b815260040180806020018281038252602e815260200180610ab3602e913960400191505060405180910390fd5b600054610100900460ff1615801561018b576000805460ff1961ff0019909116610100171660011790555b61019361068a565b61019b61072a565b80156101ad576000805461ff00191690555b50565b606560006101bc610823565b6001600160a01b0316815260208101919091526040016000205460ff166102145760405162461bcd60e51b8152600401808060200182810382526028815260200180610b016028913960400191505060405180910390fd5b600080846000015160200151806020019051810190610233919061087b565b604051630b02f02d60e31b8152919350915082906001600160a01b03808716919083169063581781689061026b908690600401610a4a565b602060405180830381600087803b15801561028557600080fd5b505af1158015610299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bd919061085f565b6001600160a01b0316146102ec5760405162461bcd60e51b81526004016102e390610a1b565b60405180910390fd5b60405163104c9fd360e31b81526001600160a01b03821690638264fe9890610318908590600401610a4a565b600060405180830381600087803b15801561033257600080fd5b505af1158015610346573d6000803e3d6000fd5b50506040516322dca8bb60e21b81526001600160a01b0384169250638b72a2ec91506103789087908690600401610a02565b600060405180830381600087803b15801561039257600080fd5b505af11580156103a6573d6000803e3d6000fd5b50505050505050505050565b6103ba610823565b6001600160a01b03166103cb61045e565b6001600160a01b031614610414576040805162461bcd60e51b81526020600482018190526024820152600080516020610ae1833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6033546001600160a01b031690565b610475610823565b6001600160a01b031661048661045e565b6001600160a01b0316146104cf576040805162461bcd60e51b81526020600482018190526024820152600080516020610ae1833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152606560205260409020805460ff19166001179055565b6104fb610823565b6001600160a01b031661050c61045e565b6001600160a01b031614610555576040805162461bcd60e51b81526020600482018190526024820152600080516020610ae1833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152606560205260409020805460ff19169055565b61057e610823565b6001600160a01b031661058f61045e565b6001600160a01b0316146105d8576040805162461bcd60e51b81526020600482018190526024820152600080516020610ae1833981519152604482015290519081900360640190fd5b6001600160a01b03811661061d5760405162461bcd60e51b8152600401808060200182810382526026815260200180610a8d6026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600061068430610827565b15905090565b600054610100900460ff16806106a357506106a3610679565b806106b1575060005460ff16155b6106ec5760405162461bcd60e51b815260040180806020018281038252602e815260200180610ab3602e913960400191505060405180910390fd5b600054610100900460ff1615801561019b576000805460ff1961ff00199091166101001716600117905580156101ad576000805461ff001916905550565b600054610100900460ff16806107435750610743610679565b80610751575060005460ff16155b61078c5760405162461bcd60e51b815260040180806020018281038252602e815260200180610ab3602e913960400191505060405180910390fd5b600054610100900460ff161580156107b7576000805460ff1961ff0019909116610100171660011790555b60006107c1610823565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156101ad576000805461ff001916905550565b3390565b803b15155b919050565b803561082c81610a77565b60006020828403121561084d578081fd5b813561085881610a77565b9392505050565b600060208284031215610870578081fd5b815161085881610a77565b6000806040838503121561088d578081fd5b825161089881610a77565b6020939093015192949293505050565b6000806000606084860312156108bc578081fd5b833567ffffffffffffffff808211156108d3578283fd5b818601915060408083890312156108e8578384fd5b805181810181811084821117156108fb57fe5b80835284358481111561090c578687fd5b8501808b0384131561091c578687fd5b60808301828110868211171561092e57fe5b845280356001600160e01b031981168114610947578788fd5b82526020818101358681111561095b578889fd5b8083019250508b601f83011261096f578788fd5b81358681111561097b57fe5b61098d601f8201601f19168301610a53565b96508087528c828285010111156109a2578889fd5b8082840183890137888282890101525085606085015282845280870135818501528399506109d1818c01610831565b9850505050506109e2818801610831565b93505050509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60208082526015908201527429b2b63632b9103737ba10383ab7359037bbb732b960591b604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715610a6f57fe5b604052919050565b6001600160a01b03811681146101ad57600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724f70657261746f72526f6c653a2063616c6c6572206973206e6f7420746865206f70657261746f72a26469706673582212209909496c4cbf532f74a82e65eef53990cdad6351c041b9db4eb565bfa202609464736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100a75780639870d7fe146100c5578063ac8a584a146100d8578063f2fde38b146100eb5761007d565b80632ff26a0a1461008257806354bc0cf11461008c578063715018a61461009f575b600080fd5b61008a6100fe565b005b61008a61009a3660046108a8565b6101b0565b61008a6103b2565b6100af61045e565b6040516100bc91906109ee565b60405180910390f35b61008a6100d336600461083c565b61046d565b61008a6100e636600461083c565b6104f3565b61008a6100f936600461083c565b610576565b600054610100900460ff16806101175750610117610679565b80610125575060005460ff16155b6101605760405162461bcd60e51b815260040180806020018281038252602e815260200180610ab3602e913960400191505060405180910390fd5b600054610100900460ff1615801561018b576000805460ff1961ff0019909116610100171660011790555b61019361068a565b61019b61072a565b80156101ad576000805461ff00191690555b50565b606560006101bc610823565b6001600160a01b0316815260208101919091526040016000205460ff166102145760405162461bcd60e51b8152600401808060200182810382526028815260200180610b016028913960400191505060405180910390fd5b600080846000015160200151806020019051810190610233919061087b565b604051630b02f02d60e31b8152919350915082906001600160a01b03808716919083169063581781689061026b908690600401610a4a565b602060405180830381600087803b15801561028557600080fd5b505af1158015610299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bd919061085f565b6001600160a01b0316146102ec5760405162461bcd60e51b81526004016102e390610a1b565b60405180910390fd5b60405163104c9fd360e31b81526001600160a01b03821690638264fe9890610318908590600401610a4a565b600060405180830381600087803b15801561033257600080fd5b505af1158015610346573d6000803e3d6000fd5b50506040516322dca8bb60e21b81526001600160a01b0384169250638b72a2ec91506103789087908690600401610a02565b600060405180830381600087803b15801561039257600080fd5b505af11580156103a6573d6000803e3d6000fd5b50505050505050505050565b6103ba610823565b6001600160a01b03166103cb61045e565b6001600160a01b031614610414576040805162461bcd60e51b81526020600482018190526024820152600080516020610ae1833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6033546001600160a01b031690565b610475610823565b6001600160a01b031661048661045e565b6001600160a01b0316146104cf576040805162461bcd60e51b81526020600482018190526024820152600080516020610ae1833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152606560205260409020805460ff19166001179055565b6104fb610823565b6001600160a01b031661050c61045e565b6001600160a01b031614610555576040805162461bcd60e51b81526020600482018190526024820152600080516020610ae1833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152606560205260409020805460ff19169055565b61057e610823565b6001600160a01b031661058f61045e565b6001600160a01b0316146105d8576040805162461bcd60e51b81526020600482018190526024820152600080516020610ae1833981519152604482015290519081900360640190fd5b6001600160a01b03811661061d5760405162461bcd60e51b8152600401808060200182810382526026815260200180610a8d6026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600061068430610827565b15905090565b600054610100900460ff16806106a357506106a3610679565b806106b1575060005460ff16155b6106ec5760405162461bcd60e51b815260040180806020018281038252602e815260200180610ab3602e913960400191505060405180910390fd5b600054610100900460ff1615801561019b576000805460ff1961ff00199091166101001716600117905580156101ad576000805461ff001916905550565b600054610100900460ff16806107435750610743610679565b80610751575060005460ff16155b61078c5760405162461bcd60e51b815260040180806020018281038252602e815260200180610ab3602e913960400191505060405180910390fd5b600054610100900460ff161580156107b7576000805460ff1961ff0019909116610100171660011790555b60006107c1610823565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156101ad576000805461ff001916905550565b3390565b803b15155b919050565b803561082c81610a77565b60006020828403121561084d578081fd5b813561085881610a77565b9392505050565b600060208284031215610870578081fd5b815161085881610a77565b6000806040838503121561088d578081fd5b825161089881610a77565b6020939093015192949293505050565b6000806000606084860312156108bc578081fd5b833567ffffffffffffffff808211156108d3578283fd5b818601915060408083890312156108e8578384fd5b805181810181811084821117156108fb57fe5b80835284358481111561090c578687fd5b8501808b0384131561091c578687fd5b60808301828110868211171561092e57fe5b845280356001600160e01b031981168114610947578788fd5b82526020818101358681111561095b578889fd5b8083019250508b601f83011261096f578788fd5b81358681111561097b57fe5b61098d601f8201601f19168301610a53565b96508087528c828285010111156109a2578889fd5b8082840183890137888282890101525085606085015282845280870135818501528399506109d1818c01610831565b9850505050506109e2818801610831565b93505050509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60208082526015908201527429b2b63632b9103737ba10383ab7359037bbb732b960591b604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715610a6f57fe5b604052919050565b6001600160a01b03811681146101ad57600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724f70657261746f72526f6c653a2063616c6c6572206973206e6f7420746865206f70657261746f72a26469706673582212209909496c4cbf532f74a82e65eef53990cdad6351c041b9db4eb565bfa202609464736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4452:161",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:161",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:87:161",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:161",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:161"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:161"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:161"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "140:5:161"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "113:26:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "113:33:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "113:33:161"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:161",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:161",
                "type": ""
              }
            ],
            "src": "14:138:161"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "227:189:161",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "273:26:161",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "282:6:161"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "290:6:161"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "275:6:161"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "275:22:161"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "275:22:161"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "248:7:161"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "257:9:161"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "244:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "244:23:161"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "269:2:161",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "240:3:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "240:32:161"
                  },
                  "nodeType": "YulIf",
                  "src": "237:2:161"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "308:36:161",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:161"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "321:12:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "321:23:161"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "312:5:161",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "380:5:161"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "353:26:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:33:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "353:33:161"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "395:15:161",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "405:5:161"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "395:6:161"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "193:9:161",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "204:7:161",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "216:6:161",
                "type": ""
              }
            ],
            "src": "157:259:161"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "502:182:161",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "548:26:161",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "557:6:161"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "565:6:161"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "550:6:161"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "550:22:161"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "550:22:161"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "523:7:161"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "532:9:161"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "519:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "519:23:161"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "544:2:161",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "515:3:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "515:32:161"
                  },
                  "nodeType": "YulIf",
                  "src": "512:2:161"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "583:29:161",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "602:9:161"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "596:5:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "596:16:161"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "587:5:161",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "648:5:161"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "621:26:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "621:33:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "621:33:161"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "663:15:161",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "673:5:161"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "663:6:161"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "468:9:161",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "479:7:161",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "491:6:161",
                "type": ""
              }
            ],
            "src": "421:263:161"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "795:226:161",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "841:26:161",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "850:6:161"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "858:6:161"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "843:6:161"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "843:22:161"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "843:22:161"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "816:7:161"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "825:9:161"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "812:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "812:23:161"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "837:2:161",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "808:3:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "808:32:161"
                  },
                  "nodeType": "YulIf",
                  "src": "805:2:161"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "876:29:161",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "895:9:161"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "889:5:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "889:16:161"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "880:5:161",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "941:5:161"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "914:26:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "914:33:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "914:33:161"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "956:15:161",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "966:5:161"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "956:6:161"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "980:35:161",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1000:9:161"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1011:2:161",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "996:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "996:18:161"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "990:5:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "990:25:161"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "980:6:161"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payablet_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "753:9:161",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "764:7:161",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "776:6:161",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "784:6:161",
                "type": ""
              }
            ],
            "src": "689:332:161"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1154:1892:161",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1200:26:161",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1209:6:161"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1217:6:161"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1202:6:161"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1202:22:161"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1202:22:161"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1175:7:161"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1184:9:161"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1171:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1171:23:161"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1196:2:161",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1167:3:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1167:32:161"
                  },
                  "nodeType": "YulIf",
                  "src": "1164:2:161"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1235:37:161",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1262:9:161"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1249:12:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1249:23:161"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1239:6:161",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1281:28:161",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1291:18:161",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1285:2:161",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1336:26:161",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1345:6:161"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1353:6:161"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1338:6:161"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1338:22:161"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1338:22:161"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1324:6:161"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1332:2:161"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1321:2:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1321:14:161"
                  },
                  "nodeType": "YulIf",
                  "src": "1318:2:161"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1371:32:161",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1385:9:161"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1396:6:161"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1381:3:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1381:22:161"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1375:2:161",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1412:14:161",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1422:4:161",
                    "type": "",
                    "value": "0x40"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1416:2:161",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1464:26:161",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1473:6:161"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1481:6:161"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1466:6:161"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1466:22:161"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1466:22:161"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1446:7:161"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1455:2:161"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1442:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1442:16:161"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1460:2:161"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1438:3:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1438:25:161"
                  },
                  "nodeType": "YulIf",
                  "src": "1435:2:161"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1499:23:161",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1519:2:161"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1513:5:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1513:9:161"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1503:6:161",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1531:33:161",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1553:6:161"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1561:2:161"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1549:3:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1549:15:161"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1535:10:161",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1623:13:161",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "1625:7:161"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1625:9:161"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1625:9:161"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1582:10:161"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1594:2:161"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1579:2:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1579:18:161"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1602:10:161"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1614:6:161"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1599:2:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1599:22:161"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1576:2:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1576:46:161"
                  },
                  "nodeType": "YulIf",
                  "src": "1573:2:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1652:2:161"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1656:10:161"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1645:6:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1645:22:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1645:22:161"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1676:32:161",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1705:2:161"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1692:12:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1692:16:161"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1680:8:161",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1737:26:161",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1746:6:161"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1754:6:161"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1739:6:161"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1739:22:161"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1739:22:161"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1723:8:161"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1733:2:161"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1720:2:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1720:16:161"
                  },
                  "nodeType": "YulIf",
                  "src": "1717:2:161"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1772:27:161",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1786:2:161"
                      },
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1790:8:161"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1782:3:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1782:17:161"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1776:2:161",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1837:26:161",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1846:6:161"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1854:6:161"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1839:6:161"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1839:22:161"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1839:22:161"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1819:7:161"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1828:2:161"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1815:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1815:16:161"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1833:2:161"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1811:3:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1811:25:161"
                  },
                  "nodeType": "YulIf",
                  "src": "1808:2:161"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1872:36:161",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1896:6:161"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1904:3:161",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1892:3:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1892:16:161"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr_1",
                      "nodeType": "YulTypedName",
                      "src": "1876:12:161",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1975:13:161",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "1977:7:161"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1977:9:161"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1977:9:161"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr_1",
                            "nodeType": "YulIdentifier",
                            "src": "1926:12:161"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1940:2:161"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1923:2:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1923:20:161"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr_1",
                            "nodeType": "YulIdentifier",
                            "src": "1948:12:161"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1962:10:161"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1945:2:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1945:28:161"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1920:2:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1920:54:161"
                  },
                  "nodeType": "YulIf",
                  "src": "1917:2:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2004:2:161"
                      },
                      {
                        "name": "newFreePtr_1",
                        "nodeType": "YulIdentifier",
                        "src": "2008:12:161"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1997:6:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1997:24:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1997:24:161"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2030:29:161",
                  "value": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2056:2:161"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2043:12:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2043:16:161"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2034:5:161",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2123:26:161",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2132:6:161"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2140:6:161"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2125:6:161"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2125:22:161"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2125:22:161"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2081:5:161"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2092:5:161"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2103:3:161",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2108:10:161",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2099:3:161"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2099:20:161"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2088:3:161"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2088:32:161"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2078:2:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2078:43:161"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2071:6:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2071:51:161"
                  },
                  "nodeType": "YulIf",
                  "src": "2068:2:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2165:10:161"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2177:5:161"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2158:6:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2158:25:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2158:25:161"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2192:12:161",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2202:2:161",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_5",
                      "nodeType": "YulTypedName",
                      "src": "2196:2:161",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2213:41:161",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "2246:2:161"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2250:2:161"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2242:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2242:11:161"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2229:12:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2229:25:161"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "2217:8:161",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2283:26:161",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2292:6:161"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2300:6:161"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2285:6:161"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2285:22:161"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2285:22:161"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "2269:8:161"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2279:2:161"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2266:2:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2266:16:161"
                  },
                  "nodeType": "YulIf",
                  "src": "2263:2:161"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2318:27:161",
                  "value": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2332:2:161"
                      },
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "2336:8:161"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2328:3:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2328:17:161"
                  },
                  "variables": [
                    {
                      "name": "_6",
                      "nodeType": "YulTypedName",
                      "src": "2322:2:161",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2393:26:161",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2402:6:161"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2410:6:161"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2395:6:161"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2395:22:161"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2395:22:161"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_6",
                                "nodeType": "YulIdentifier",
                                "src": "2372:2:161"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2376:4:161",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2368:3:161"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2368:13:161"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2383:7:161"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2364:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2364:27:161"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2357:6:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2357:35:161"
                  },
                  "nodeType": "YulIf",
                  "src": "2354:2:161"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2428:26:161",
                  "value": {
                    "arguments": [
                      {
                        "name": "_6",
                        "nodeType": "YulIdentifier",
                        "src": "2451:2:161"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2438:12:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2438:16:161"
                  },
                  "variables": [
                    {
                      "name": "_7",
                      "nodeType": "YulTypedName",
                      "src": "2432:2:161",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2477:13:161",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "2479:7:161"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2479:9:161"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2479:9:161"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_7",
                        "nodeType": "YulIdentifier",
                        "src": "2469:2:161"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2473:2:161"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2466:2:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2466:10:161"
                  },
                  "nodeType": "YulIf",
                  "src": "2463:2:161"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2499:65:161",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2539:2:161"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2543:4:161",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2535:3:161"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2535:13:161"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2554:2:161",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2550:3:161"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2550:7:161"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2531:3:161"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2531:27:161"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2560:2:161"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2527:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2527:36:161"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "2512:14:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2512:52:161"
                  },
                  "variables": [
                    {
                      "name": "array",
                      "nodeType": "YulTypedName",
                      "src": "2503:5:161",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2580:5:161"
                      },
                      {
                        "name": "_7",
                        "nodeType": "YulIdentifier",
                        "src": "2587:2:161"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2573:6:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2573:17:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2573:17:161"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2636:26:161",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2645:6:161"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2653:6:161"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2638:6:161"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2638:22:161"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2638:22:161"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_6",
                                "nodeType": "YulIdentifier",
                                "src": "2613:2:161"
                              },
                              {
                                "name": "_7",
                                "nodeType": "YulIdentifier",
                                "src": "2617:2:161"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2609:3:161"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2609:11:161"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2622:2:161"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2605:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2605:20:161"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2627:7:161"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2602:2:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2602:33:161"
                  },
                  "nodeType": "YulIf",
                  "src": "2599:2:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "2688:5:161"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2695:2:161"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2684:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2684:14:161"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_6",
                            "nodeType": "YulIdentifier",
                            "src": "2704:2:161"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2708:2:161"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2700:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2700:11:161"
                      },
                      {
                        "name": "_7",
                        "nodeType": "YulIdentifier",
                        "src": "2713:2:161"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2671:12:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2671:45:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2671:45:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "2740:5:161"
                              },
                              {
                                "name": "_7",
                                "nodeType": "YulIdentifier",
                                "src": "2747:2:161"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2736:3:161"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2736:14:161"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2752:2:161"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2732:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2732:23:161"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2757:6:161"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2725:6:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2725:39:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2725:39:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2784:6:161"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2792:2:161",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2780:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2780:15:161"
                      },
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2797:5:161"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2773:6:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2773:30:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2773:30:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2819:6:161"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2827:10:161"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2812:6:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2812:26:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2812:26:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2858:6:161"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2866:2:161"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2854:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2854:15:161"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2888:2:161"
                              },
                              {
                                "name": "_5",
                                "nodeType": "YulIdentifier",
                                "src": "2892:2:161"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2884:3:161"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2884:11:161"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2871:12:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2871:25:161"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2847:6:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2847:50:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2847:50:161"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2906:16:161",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2916:6:161"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2906:6:161"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2931:50:161",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2966:9:161"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2977:2:161"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2962:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2962:18:161"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2941:20:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2941:40:161"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2931:6:161"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2990:50:161",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3025:9:161"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "3036:2:161"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3021:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3021:18:161"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3000:20:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3000:40:161"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2990:6:161"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_Asset_$12567_memory_ptrt_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1104:9:161",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1115:7:161",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1127:6:161",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1135:6:161",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1143:6:161",
                "type": ""
              }
            ],
            "src": "1026:2020:161"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3152:102:161",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3162:26:161",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3174:9:161"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3185:2:161",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3170:3:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3170:18:161"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3162:4:161"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3204:9:161"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3219:6:161"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3235:3:161",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3240:1:161",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3231:3:161"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3231:11:161"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3244:1:161",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3227:3:161"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3227:19:161"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3215:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3215:32:161"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3197:6:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3197:51:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3197:51:161"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3121:9:161",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3132:6:161",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3143:4:161",
                "type": ""
              }
            ],
            "src": "3051:203:161"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3388:145:161",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3398:26:161",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3410:9:161"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3421:2:161",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3406:3:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3406:18:161"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3398:4:161"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3440:9:161"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3455:6:161"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3471:3:161",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3476:1:161",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3467:3:161"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3467:11:161"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3480:1:161",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3463:3:161"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3463:19:161"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3451:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3451:32:161"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3433:6:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3433:51:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3433:51:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3504:9:161"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3515:2:161",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3500:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3500:18:161"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3520:6:161"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3493:6:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3493:34:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3493:34:161"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3349:9:161",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3360:6:161",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3368:6:161",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3379:4:161",
                "type": ""
              }
            ],
            "src": "3259:274:161"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3712:171:161",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3729:9:161"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3740:2:161",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3722:6:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3722:21:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3722:21:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3763:9:161"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3774:2:161",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3759:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3759:18:161"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3779:2:161",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3752:6:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3752:30:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3752:30:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3802:9:161"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3813:2:161",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3798:3:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3798:18:161"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3818:23:161",
                        "type": "",
                        "value": "Seller not punk owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3791:6:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3791:51:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3791:51:161"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3851:26:161",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3863:9:161"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3874:2:161",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3859:3:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3859:18:161"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3851:4:161"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cd0272b36647d2fe024240c7715b5a0468a0160a3fc5320a39d1005f0be79cbb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3689:9:161",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3703:4:161",
                "type": ""
              }
            ],
            "src": "3538:345:161"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3989:76:161",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3999:26:161",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4011:9:161"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4022:2:161",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4007:3:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4007:18:161"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3999:4:161"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4041:9:161"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4052:6:161"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4034:6:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4034:25:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4034:25:161"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3958:9:161",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3969:6:161",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3980:4:161",
                "type": ""
              }
            ],
            "src": "3888:177:161"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4114:198:161",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4124:19:161",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4140:2:161",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4134:5:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4134:9:161"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "4124:6:161"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4152:35:161",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "4174:6:161"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "4182:4:161"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4170:3:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4170:17:161"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "4156:10:161",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4262:13:161",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "4264:7:161"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4264:9:161"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4264:9:161"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "4205:10:161"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4217:18:161",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4202:2:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4202:34:161"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "4241:10:161"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4253:6:161"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4238:2:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4238:22:161"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "4199:2:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4199:62:161"
                  },
                  "nodeType": "YulIf",
                  "src": "4196:2:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4291:2:161",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "4295:10:161"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4284:6:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4284:22:161"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4284:22:161"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "4094:4:161",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4103:6:161",
                "type": ""
              }
            ],
            "src": "4070:242:161"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4364:86:161",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4428:16:161",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4437:1:161",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4440:1:161",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4430:6:161"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4430:12:161"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4430:12:161"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4387:5:161"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4398:5:161"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4413:3:161",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4418:1:161",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4409:3:161"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4409:11:161"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4422:1:161",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4405:3:161"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4405:19:161"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4394:3:161"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4394:31:161"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4384:2:161"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4384:42:161"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4377:6:161"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4377:50:161"
                  },
                  "nodeType": "YulIf",
                  "src": "4374:2:161"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4353:5:161",
                "type": ""
              }
            ],
            "src": "4317:133:161"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payablet_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_struct$_Asset_$12567_memory_ptrt_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value2, value2) }\n        let _2 := add(headStart, offset)\n        let _3 := 0x40\n        if slt(sub(dataEnd, _2), _3) { revert(value2, value2) }\n        let memPtr := mload(_3)\n        let newFreePtr := add(memPtr, _3)\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(_3, newFreePtr)\n        let offset_1 := calldataload(_2)\n        if gt(offset_1, _1) { revert(value2, value2) }\n        let _4 := add(_2, offset_1)\n        if slt(sub(dataEnd, _4), _3) { revert(value2, value2) }\n        let newFreePtr_1 := add(memPtr, 128)\n        if or(gt(newFreePtr_1, _1), lt(newFreePtr_1, newFreePtr)) { invalid() }\n        mstore(_3, newFreePtr_1)\n        let value := calldataload(_4)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value2, value2) }\n        mstore(newFreePtr, value)\n        let _5 := 32\n        let offset_2 := calldataload(add(_4, _5))\n        if gt(offset_2, _1) { revert(value2, value2) }\n        let _6 := add(_4, offset_2)\n        if iszero(slt(add(_6, 0x1f), dataEnd)) { revert(value2, value2) }\n        let _7 := calldataload(_6)\n        if gt(_7, _1) { invalid() }\n        let array := allocateMemory(add(and(add(_7, 0x1f), not(31)), _5))\n        mstore(array, _7)\n        if gt(add(add(_6, _7), _5), dataEnd) { revert(value2, value2) }\n        calldatacopy(add(array, _5), add(_6, _5), _7)\n        mstore(add(add(array, _7), _5), value2)\n        mstore(add(memPtr, 96), array)\n        mstore(memPtr, newFreePtr)\n        mstore(add(memPtr, _5), calldataload(add(_2, _5)))\n        value0 := memPtr\n        value1 := abi_decode_t_address(add(headStart, _5))\n        value2 := abi_decode_t_address(add(headStart, _3))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_cd0272b36647d2fe024240c7715b5a0468a0160a3fc5320a39d1005f0be79cbb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Seller not punk owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function allocateMemory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
      "id": 161,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "287:647:152:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "287:647:152:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;235:131:90;;;:::i;:::-;;353:579:152;;;;;;:::i;:::-;;:::i;1967:145:0:-;;;:::i;1335:85::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;372:101:90;;;;;;:::i;:::-;;:::i;479:105::-;;;;;;:::i;:::-;;:::i;2261:240:0:-;;;;;;:::i;:::-;;:::i;235:131:90:-;1512:13:6;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:6;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:6;;;;;1738:19;1720:4;1738:19;;;1670:98;297:26:90::1;:24;:26::i;:::-;333;:24;:26::i;:::-;1794:14:6::0;1790:66;;;1840:5;1824:21;;-1:-1:-1;;1824:21:6;;;1790:66;235:131:90;:::o;353:579:152:-;632:9:90;:23;642:12;:10;:12::i;:::-;-1:-1:-1;;;;;632:23:90;;;;;;;;;;;;-1:-1:-1;632:23:90;;;;624:76;;;;-1:-1:-1;;;624:76:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:13:152::1;483:14:::0;512:5:::1;:15;;;:20;;;501:49;;;;;;;;;;;;:::i;:::-;671:39;::::0;-1:-1:-1;;;671:39:152;;467:83;;-1:-1:-1;467:83:152;-1:-1:-1;467:83:152;;-1:-1:-1;;;;;671:47:152;;::::1;::::0;:28;;::::1;::::0;::::1;::::0;:39:::1;::::0;467:83;;671:39:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;671:47:152::1;;663:81;;;;-1:-1:-1::0;;;663:81:152::1;;;;;;;:::i;:::-;;;;;;;;;802:28;::::0;-1:-1:-1;;;802:28:152;;-1:-1:-1;;;;;802:17:152;::::1;::::0;::::1;::::0;:28:::1;::::0;820:9;;802:28:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;888:37:152::1;::::0;-1:-1:-1;;;888:37:152;;-1:-1:-1;;;;;888:22:152;::::1;::::0;-1:-1:-1;888:22:152::1;::::0;-1:-1:-1;888:37:152::1;::::0;911:2;;915:9;;888:37:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;710:1:90;;;353:579:152::0;;;:::o;1967:145:0:-;1558:12;:10;:12::i;:::-;-1:-1:-1;;;;;1547:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1547:23:0;;1539:68;;;;;-1:-1:-1;;;1539:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1539:68:0;;;;;;;;;;;;;;;2057:6:::1;::::0;2036:40:::1;::::0;2073:1:::1;::::0;-1:-1:-1;;;;;2057:6:0::1;::::0;2036:40:::1;::::0;2073:1;;2036:40:::1;2086:6;:19:::0;;-1:-1:-1;;;;;;2086:19:0::1;::::0;;1967:145::o;1335:85::-;1407:6;;-1:-1:-1;;;;;1407:6:0;1335:85;:::o;372:101:90:-;1558:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1547:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1547:23:0;;1539:68;;;;;-1:-1:-1;;;1539:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1539:68:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;440:19:90::1;;::::0;;;:9:::1;:19;::::0;;;;:26;;-1:-1:-1;;440:26:90::1;462:4;440:26;::::0;;372:101::o;479:105::-;1558:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1547:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1547:23:0;;1539:68;;;;;-1:-1:-1;;;1539:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1539:68:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;550:19:90::1;572:5;550:19:::0;;;:9:::1;:19;::::0;;;;:27;;-1:-1:-1;;550:27:90::1;::::0;;479:105::o;2261:240:0:-;1558:12;:10;:12::i;:::-;-1:-1:-1;;;;;1547:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1547:23:0;;1539:68;;;;;-1:-1:-1;;;1539:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1539:68:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;2349:22:0;::::1;2341:73;;;;-1:-1:-1::0;;;2341:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2450:6;::::0;2429:38:::1;::::0;-1:-1:-1;;;;;2429:38:0;;::::1;::::0;2450:6:::1;::::0;2429:38:::1;::::0;2450:6:::1;::::0;2429:38:::1;2477:6;:17:::0;;-1:-1:-1;;;;;;2477:17:0::1;-1:-1:-1::0;;;;;2477:17:0;;;::::1;::::0;;;::::1;::::0;;2261:240::o;1952:123:6:-;2000:4;2024:44;2062:4;2024:29;:44::i;:::-;2023:45;2016:52;;1952:123;:::o;759:64:19:-;1512:13:6;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:6;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:6;;;;;1738:19;1720:4;1738:19;;;1794:14;1790:66;;;1840:5;1824:21;;-1:-1:-1;;1824:21:6;;;759:64:19;:::o;1067:192:0:-;1512:13:6;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:6;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:6;;;;;1738:19;1720:4;1738:19;;;1670:98;1134:17:0::1;1154:12;:10;:12::i;:::-;1176:6;:18:::0;;-1:-1:-1;;;;;;1176:18:0::1;-1:-1:-1::0;;;;;1176:18:0;::::1;::::0;;::::1;::::0;;;1209:43:::1;::::0;1176:18;;-1:-1:-1;1176:18:0;-1:-1:-1;;1209:43:0::1;::::0;-1:-1:-1;;1209:43:0::1;1778:1:6;1794:14:::0;1790:66;;;1840:5;1824:21;;-1:-1:-1;;1824:21:6;;;1067:192:0;:::o;828:104:19:-;915:10;828:104;:::o;737:413:18:-;1097:20;;1135:8;;737:413;;;;:::o;14:138:161:-;84:20;;113:33;84:20;113:33;:::i;157:259::-;;269:2;257:9;248:7;244:23;240:32;237:2;;;290:6;282;275:22;237:2;334:9;321:23;353:33;380:5;353:33;:::i;:::-;405:5;227:189;-1:-1:-1;;;227:189:161:o;421:263::-;;544:2;532:9;523:7;519:23;515:32;512:2;;;565:6;557;550:22;512:2;602:9;596:16;621:33;648:5;621:33;:::i;689:332::-;;;837:2;825:9;816:7;812:23;808:32;805:2;;;858:6;850;843:22;805:2;895:9;889:16;914:33;941:5;914:33;:::i;:::-;1011:2;996:18;;;;990:25;966:5;;990:25;;-1:-1:-1;;;795:226:161:o;1026:2020::-;;;;1196:2;1184:9;1175:7;1171:23;1167:32;1164:2;;;1217:6;1209;1202:22;1164:2;1262:9;1249:23;1291:18;1332:2;1324:6;1321:14;1318:2;;;1353:6;1345;1338:22;1318:2;1396:6;1385:9;1381:22;1371:32;;1422:4;1460:2;1455;1446:7;1442:16;1438:25;1435:2;;;1481:6;1473;1466:22;1435:2;1519;1513:9;1561:2;1553:6;1549:15;1614:6;1602:10;1599:22;1594:2;1582:10;1579:18;1576:46;1573:2;;;1625:9;1573:2;1656:10;1652:2;1645:22;1705:2;1692:16;1733:2;1723:8;1720:16;1717:2;;;1754:6;1746;1739:22;1717:2;1782:17;;1815:16;;;1811:25;-1:-1:-1;1808:2:161;;;1854:6;1846;1839:22;1808:2;1904:3;1896:6;1892:16;1962:10;1948:12;1945:28;1940:2;1926:12;1923:20;1920:54;1917:2;;;1977:9;1917:2;1997:24;;2043:16;;-1:-1:-1;;;;;;2088:32:161;;2078:43;;2068:2;;2140:6;2132;2125:22;2068:2;2158:25;;2202:2;2242:11;;;2229:25;2266:16;;;2263:2;;;2300:6;2292;2285:22;2263:2;2336:8;2332:2;2328:17;2318:27;;;2383:7;2376:4;2372:2;2368:13;2364:27;2354:2;;2410:6;2402;2395:22;2354:2;2451;2438:16;2473:2;2469;2466:10;2463:2;;;2479:9;2463:2;2512:52;2554:2;2535:13;;-1:-1:-1;;2531:27:161;2527:36;;2512:52;:::i;:::-;2499:65;;2587:2;2580:5;2573:17;2627:7;2622:2;2617;2613;2609:11;2605:20;2602:33;2599:2;;;2653:6;2645;2638:22;2599:2;2713;2708;2704;2700:11;2695:2;2688:5;2684:14;2671:45;2757:6;2752:2;2747;2740:5;2736:14;2732:23;2725:39;;2797:5;2792:2;2784:6;2780:15;2773:30;2827:10;2819:6;2812:26;2892:2;2888;2884:11;2871:25;2866:2;2858:6;2854:15;2847:50;2916:6;2906:16;;2941:40;2977:2;2966:9;2962:18;2941:40;:::i;:::-;2931:50;;;;;;3000:40;3036:2;3025:9;3021:18;3000:40;:::i;:::-;2990:50;;;;;1154:1892;;;;;:::o;3051:203::-;-1:-1:-1;;;;;3215:32:161;;;;3197:51;;3185:2;3170:18;;3152:102::o;3259:274::-;-1:-1:-1;;;;;3451:32:161;;;;3433:51;;3515:2;3500:18;;3493:34;3421:2;3406:18;;3388:145::o;3538:345::-;3740:2;3722:21;;;3779:2;3759:18;;;3752:30;-1:-1:-1;;;3813:2:161;3798:18;;3791:51;3874:2;3859:18;;3712:171::o;3888:177::-;4034:25;;;4022:2;4007:18;;3989:76::o;4070:242::-;4140:2;4134:9;4170:17;;;4217:18;4202:34;;4238:22;;;4199:62;4196:2;;;4264:9;4196:2;4291;4284:22;4114:198;;-1:-1:-1;4114:198:161:o;4317:133::-;-1:-1:-1;;;;;4394:31:161;;4384:42;;4374:2;;4440:1;4437;4430:12",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.9 <0.8.0;\npragma abicoder v2;\n\nimport \"@rarible/exchange-interfaces/contracts/ITransferProxy.sol\";\nimport \"@rarible/exchange-interfaces/contracts/ICryptoPunksMarket.sol\";\nimport \"@rarible/role-operator/contracts/OperatorRole.sol\";\n\ncontract PunkTransferProxy is OperatorRole, ITransferProxy {\n\n    function transfer(LibAsset.Asset memory asset, address from, address to) override onlyOperator external {\n        (address token, uint punkIndex) = abi.decode(asset.assetType.data, (address, uint));\n        ICryptoPunksMarket punkToken = ICryptoPunksMarket(token);\n        //check punk from real owner\n        require(punkToken.punkIndexToAddress(punkIndex) == from, \"Seller not punk owner\");\n        //buy punk to proxy, now proxy is owner\n        punkToken.buyPunk(punkIndex);\n        //Transfer ownership of a punk to buyer\n        punkToken.transferPunk(to, punkIndex);\n    }\n}",
  "sourcePath": "@rarible/transfer-proxy/contracts/punk/PunkTransferProxy.sol",
  "ast": {
    "absolutePath": "@rarible/transfer-proxy/contracts/punk/PunkTransferProxy.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        1746
      ],
      "ContextUpgradeable": [
        1791
      ],
      "ICryptoPunksMarket": [
        7729
      ],
      "ITransferProxy": [
        7806
      ],
      "Initializable": [
        871
      ],
      "LibAsset": [
        12610
      ],
      "OperatorRole": [
        13315
      ],
      "OwnableUpgradeable": [
        130
      ],
      "PunkTransferProxy": [
        24804
      ]
    },
    "id": 24805,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24737,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".9",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:152"
      },
      {
        "id": 24738,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "65:19:152"
      },
      {
        "absolutePath": "@rarible/exchange-interfaces/contracts/ITransferProxy.sol",
        "file": "@rarible/exchange-interfaces/contracts/ITransferProxy.sol",
        "id": 24739,
        "nodeType": "ImportDirective",
        "scope": 24805,
        "sourceUnit": 7807,
        "src": "86:67:152",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@rarible/exchange-interfaces/contracts/ICryptoPunksMarket.sol",
        "file": "@rarible/exchange-interfaces/contracts/ICryptoPunksMarket.sol",
        "id": 24740,
        "nodeType": "ImportDirective",
        "scope": 24805,
        "sourceUnit": 7730,
        "src": "154:71:152",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@rarible/role-operator/contracts/OperatorRole.sol",
        "file": "@rarible/role-operator/contracts/OperatorRole.sol",
        "id": 24741,
        "nodeType": "ImportDirective",
        "scope": 24805,
        "sourceUnit": 13316,
        "src": "226:59:152",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24742,
              "name": "OperatorRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13315,
              "src": "317:12:152",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OperatorRole_$13315",
                "typeString": "contract OperatorRole"
              }
            },
            "id": 24743,
            "nodeType": "InheritanceSpecifier",
            "src": "317:12:152"
          },
          {
            "baseName": {
              "id": 24744,
              "name": "ITransferProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7806,
              "src": "331:14:152",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITransferProxy_$7806",
                "typeString": "contract ITransferProxy"
              }
            },
            "id": 24745,
            "nodeType": "InheritanceSpecifier",
            "src": "331:14:152"
          }
        ],
        "contractDependencies": [
          130,
          871,
          1791,
          7806,
          13315
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24804,
        "linearizedBaseContracts": [
          24804,
          7806,
          13315,
          130,
          1791,
          871
        ],
        "name": "PunkTransferProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              7805
            ],
            "body": {
              "id": 24802,
              "nodeType": "Block",
              "src": "457:475:152",
              "statements": [
                {
                  "assignments": [
                    24758,
                    24760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24758,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 24802,
                      "src": "468:13:152",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24757,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "468:7:152",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24760,
                      "mutability": "mutable",
                      "name": "punkIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 24802,
                      "src": "483:14:152",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24759,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "483:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24772,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 24763,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24747,
                            "src": "512:5:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Asset_$12567_memory_ptr",
                              "typeString": "struct LibAsset.Asset memory"
                            }
                          },
                          "id": 24764,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "assetType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12564,
                          "src": "512:15:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AssetType_$12562_memory_ptr",
                            "typeString": "struct LibAsset.AssetType memory"
                          }
                        },
                        "id": 24765,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12561,
                        "src": "512:20:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 24767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "535:7:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24766,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "535:7:152",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 24769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "544:4:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 24768,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "544:4:152",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 24770,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "534:15:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 24761,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "501:3:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 24762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "501:10:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 24771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "501:49:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$",
                      "typeString": "tuple(address payable,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "467:83:152"
                },
                {
                  "assignments": [
                    24774
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24774,
                      "mutability": "mutable",
                      "name": "punkToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 24802,
                      "src": "560:28:152",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICryptoPunksMarket_$7729",
                        "typeString": "contract ICryptoPunksMarket"
                      },
                      "typeName": {
                        "id": 24773,
                        "name": "ICryptoPunksMarket",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7729,
                        "src": "560:18:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICryptoPunksMarket_$7729",
                          "typeString": "contract ICryptoPunksMarket"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24778,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24776,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24758,
                        "src": "610:5:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24775,
                      "name": "ICryptoPunksMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7729,
                      "src": "591:18:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICryptoPunksMarket_$7729_$",
                        "typeString": "type(contract ICryptoPunksMarket)"
                      }
                    },
                    "id": 24777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "591:25:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICryptoPunksMarket_$7729",
                      "typeString": "contract ICryptoPunksMarket"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "560:56:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 24782,
                              "name": "punkIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24760,
                              "src": "700:9:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 24780,
                              "name": "punkToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24774,
                              "src": "671:9:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICryptoPunksMarket_$7729",
                                "typeString": "contract ICryptoPunksMarket"
                              }
                            },
                            "id": 24781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "punkIndexToAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7707,
                            "src": "671:28:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) external returns (address)"
                            }
                          },
                          "id": 24783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "671:39:152",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 24784,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24749,
                          "src": "714:4:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "671:47:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656c6c6572206e6f742070756e6b206f776e6572",
                        "id": 24786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "720:23:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd0272b36647d2fe024240c7715b5a0468a0160a3fc5320a39d1005f0be79cbb",
                          "typeString": "literal_string \"Seller not punk owner\""
                        },
                        "value": "Seller not punk owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd0272b36647d2fe024240c7715b5a0468a0160a3fc5320a39d1005f0be79cbb",
                          "typeString": "literal_string \"Seller not punk owner\""
                        }
                      ],
                      "id": 24779,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "663:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "663:81:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24788,
                  "nodeType": "ExpressionStatement",
                  "src": "663:81:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24792,
                        "name": "punkIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24760,
                        "src": "820:9:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24789,
                        "name": "punkToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24774,
                        "src": "802:9:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICryptoPunksMarket_$7729",
                          "typeString": "contract ICryptoPunksMarket"
                        }
                      },
                      "id": 24791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "buyPunk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7712,
                      "src": "802:17:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 24793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "802:28:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24794,
                  "nodeType": "ExpressionStatement",
                  "src": "802:28:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24798,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24751,
                        "src": "911:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24799,
                        "name": "punkIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24760,
                        "src": "915:9:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24795,
                        "name": "punkToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24774,
                        "src": "888:9:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICryptoPunksMarket_$7729",
                          "typeString": "contract ICryptoPunksMarket"
                        }
                      },
                      "id": 24797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferPunk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7719,
                      "src": "888:22:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "888:37:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24801,
                  "nodeType": "ExpressionStatement",
                  "src": "888:37:152"
                }
              ]
            },
            "functionSelector": "54bc0cf1",
            "id": 24803,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 24755,
                "modifierName": {
                  "id": 24754,
                  "name": "onlyOperator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13314,
                  "src": "435:12:152",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "435:12:152"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24753,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "426:8:152"
            },
            "parameters": {
              "id": 24752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24747,
                  "mutability": "mutable",
                  "name": "asset",
                  "nodeType": "VariableDeclaration",
                  "scope": 24803,
                  "src": "371:27:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Asset_$12567_memory_ptr",
                    "typeString": "struct LibAsset.Asset"
                  },
                  "typeName": {
                    "id": 24746,
                    "name": "LibAsset.Asset",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12567,
                    "src": "371:14:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Asset_$12567_storage_ptr",
                      "typeString": "struct LibAsset.Asset"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24749,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 24803,
                  "src": "400:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24751,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 24803,
                  "src": "414:10:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "370:55:152"
            },
            "returnParameters": {
              "id": 24756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "457:0:152"
            },
            "scope": 24804,
            "src": "353:579:152",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 24805,
        "src": "287:647:152"
      }
    ],
    "src": "33:901:152"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "@rarible/transfer-proxy/contracts/punk/PunkTransferProxy.sol",
      "exportedSymbols": {
        "AddressUpgradeable": [
          1746
        ],
        "ContextUpgradeable": [
          1791
        ],
        "ICryptoPunksMarket": [
          7729
        ],
        "ITransferProxy": [
          7806
        ],
        "Initializable": [
          871
        ],
        "LibAsset": [
          12610
        ],
        "OperatorRole": [
          13315
        ],
        "OwnableUpgradeable": [
          130
        ],
        "PunkTransferProxy": [
          24804
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.6",
            ".9",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 24737,
        "name": "PragmaDirective",
        "src": "33:31:152"
      },
      {
        "attributes": {
          "literals": [
            "abicoder",
            "v2"
          ]
        },
        "id": 24738,
        "name": "PragmaDirective",
        "src": "65:19:152"
      },
      {
        "attributes": {
          "SourceUnit": 7807,
          "absolutePath": "@rarible/exchange-interfaces/contracts/ITransferProxy.sol",
          "file": "@rarible/exchange-interfaces/contracts/ITransferProxy.sol",
          "scope": 24805,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 24739,
        "name": "ImportDirective",
        "src": "86:67:152"
      },
      {
        "attributes": {
          "SourceUnit": 7730,
          "absolutePath": "@rarible/exchange-interfaces/contracts/ICryptoPunksMarket.sol",
          "file": "@rarible/exchange-interfaces/contracts/ICryptoPunksMarket.sol",
          "scope": 24805,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 24740,
        "name": "ImportDirective",
        "src": "154:71:152"
      },
      {
        "attributes": {
          "SourceUnit": 13316,
          "absolutePath": "@rarible/role-operator/contracts/OperatorRole.sol",
          "file": "@rarible/role-operator/contracts/OperatorRole.sol",
          "scope": 24805,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 24741,
        "name": "ImportDirective",
        "src": "226:59:152"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            130,
            871,
            1791,
            7806,
            13315
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            24804,
            7806,
            13315,
            130,
            1791,
            871
          ],
          "name": "PunkTransferProxy",
          "scope": 24805
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "OperatorRole",
                  "referencedDeclaration": 13315,
                  "type": "contract OperatorRole"
                },
                "id": 24742,
                "name": "UserDefinedTypeName",
                "src": "317:12:152"
              }
            ],
            "id": 24743,
            "name": "InheritanceSpecifier",
            "src": "317:12:152"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ITransferProxy",
                  "referencedDeclaration": 7806,
                  "type": "contract ITransferProxy"
                },
                "id": 24744,
                "name": "UserDefinedTypeName",
                "src": "331:14:152"
              }
            ],
            "id": 24745,
            "name": "InheritanceSpecifier",
            "src": "331:14:152"
          },
          {
            "attributes": {
              "baseFunctions": [
                7805
              ],
              "functionSelector": "54bc0cf1",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "transfer",
              "scope": 24804,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 24753,
                "name": "OverrideSpecifier",
                "src": "426:8:152"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "asset",
                      "scope": 24803,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct LibAsset.Asset",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "LibAsset.Asset",
                          "referencedDeclaration": 12567,
                          "type": "struct LibAsset.Asset"
                        },
                        "id": 24746,
                        "name": "UserDefinedTypeName",
                        "src": "371:14:152"
                      }
                    ],
                    "id": 24747,
                    "name": "VariableDeclaration",
                    "src": "371:27:152"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "from",
                      "scope": 24803,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 24748,
                        "name": "ElementaryTypeName",
                        "src": "400:7:152"
                      }
                    ],
                    "id": 24749,
                    "name": "VariableDeclaration",
                    "src": "400:12:152"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 24803,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 24750,
                        "name": "ElementaryTypeName",
                        "src": "414:7:152"
                      }
                    ],
                    "id": 24751,
                    "name": "VariableDeclaration",
                    "src": "414:10:152"
                  }
                ],
                "id": 24752,
                "name": "ParameterList",
                "src": "370:55:152"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 24756,
                "name": "ParameterList",
                "src": "457:0:152"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 13314,
                      "type": "modifier ()",
                      "value": "onlyOperator"
                    },
                    "id": 24754,
                    "name": "Identifier",
                    "src": "435:12:152"
                  }
                ],
                "id": 24755,
                "name": "ModifierInvocation",
                "src": "435:12:152"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        24758,
                        24760
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "token",
                          "scope": 24802,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 24757,
                            "name": "ElementaryTypeName",
                            "src": "468:7:152"
                          }
                        ],
                        "id": 24758,
                        "name": "VariableDeclaration",
                        "src": "468:13:152"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "punkIndex",
                          "scope": 24802,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 24759,
                            "name": "ElementaryTypeName",
                            "src": "483:4:152"
                          }
                        ],
                        "id": 24760,
                        "name": "VariableDeclaration",
                        "src": "483:14:152"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple(address payable,uint256)",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                                  "typeString": "tuple(type(address),type(uint256))"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "decode",
                              "type": "function () pure"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967295,
                                  "type": "abi",
                                  "value": "abi"
                                },
                                "id": 24761,
                                "name": "Identifier",
                                "src": "501:3:152"
                              }
                            ],
                            "id": 24762,
                            "name": "MemberAccess",
                            "src": "501:10:152"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "data",
                              "referencedDeclaration": 12561,
                              "type": "bytes memory"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "assetType",
                                  "referencedDeclaration": 12564,
                                  "type": "struct LibAsset.AssetType memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 24747,
                                      "type": "struct LibAsset.Asset memory",
                                      "value": "asset"
                                    },
                                    "id": 24763,
                                    "name": "Identifier",
                                    "src": "512:5:152"
                                  }
                                ],
                                "id": 24764,
                                "name": "MemberAccess",
                                "src": "512:15:152"
                              }
                            ],
                            "id": 24765,
                            "name": "MemberAccess",
                            "src": "512:20:152"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "tuple(type(address),type(uint256))"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 24766,
                                    "name": "ElementaryTypeName",
                                    "src": "535:7:152"
                                  }
                                ],
                                "id": 24767,
                                "name": "ElementaryTypeNameExpression",
                                "src": "535:7:152"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint"
                                    },
                                    "id": 24768,
                                    "name": "ElementaryTypeName",
                                    "src": "544:4:152"
                                  }
                                ],
                                "id": 24769,
                                "name": "ElementaryTypeNameExpression",
                                "src": "544:4:152"
                              }
                            ],
                            "id": 24770,
                            "name": "TupleExpression",
                            "src": "534:15:152"
                          }
                        ],
                        "id": 24771,
                        "name": "FunctionCall",
                        "src": "501:49:152"
                      }
                    ],
                    "id": 24772,
                    "name": "VariableDeclarationStatement",
                    "src": "467:83:152"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        24774
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "punkToken",
                          "scope": 24802,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract ICryptoPunksMarket",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "ICryptoPunksMarket",
                              "referencedDeclaration": 7729,
                              "type": "contract ICryptoPunksMarket"
                            },
                            "id": 24773,
                            "name": "UserDefinedTypeName",
                            "src": "560:18:152"
                          }
                        ],
                        "id": 24774,
                        "name": "VariableDeclaration",
                        "src": "560:28:152"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "contract ICryptoPunksMarket",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7729,
                              "type": "type(contract ICryptoPunksMarket)",
                              "value": "ICryptoPunksMarket"
                            },
                            "id": 24775,
                            "name": "Identifier",
                            "src": "591:18:152"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 24758,
                              "type": "address",
                              "value": "token"
                            },
                            "id": 24776,
                            "name": "Identifier",
                            "src": "610:5:152"
                          }
                        ],
                        "id": 24777,
                        "name": "FunctionCall",
                        "src": "591:25:152"
                      }
                    ],
                    "id": 24778,
                    "name": "VariableDeclarationStatement",
                    "src": "560:56:152"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_cd0272b36647d2fe024240c7715b5a0468a0160a3fc5320a39d1005f0be79cbb",
                                  "typeString": "literal_string \"Seller not punk owner\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 24779,
                            "name": "Identifier",
                            "src": "663:7:152"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "punkIndexToAddress",
                                      "referencedDeclaration": 7707,
                                      "type": "function (uint256) external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 24774,
                                          "type": "contract ICryptoPunksMarket",
                                          "value": "punkToken"
                                        },
                                        "id": 24780,
                                        "name": "Identifier",
                                        "src": "671:9:152"
                                      }
                                    ],
                                    "id": 24781,
                                    "name": "MemberAccess",
                                    "src": "671:28:152"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 24760,
                                      "type": "uint256",
                                      "value": "punkIndex"
                                    },
                                    "id": 24782,
                                    "name": "Identifier",
                                    "src": "700:9:152"
                                  }
                                ],
                                "id": 24783,
                                "name": "FunctionCall",
                                "src": "671:39:152"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24749,
                                  "type": "address",
                                  "value": "from"
                                },
                                "id": 24784,
                                "name": "Identifier",
                                "src": "714:4:152"
                              }
                            ],
                            "id": 24785,
                            "name": "BinaryOperation",
                            "src": "671:47:152"
                          },
                          {
                            "attributes": {
                              "hexvalue": "53656c6c6572206e6f742070756e6b206f776e6572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Seller not punk owner\"",
                              "value": "Seller not punk owner"
                            },
                            "id": 24786,
                            "name": "Literal",
                            "src": "720:23:152"
                          }
                        ],
                        "id": 24787,
                        "name": "FunctionCall",
                        "src": "663:81:152"
                      }
                    ],
                    "id": 24788,
                    "name": "ExpressionStatement",
                    "src": "663:81:152"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "buyPunk",
                              "referencedDeclaration": 7712,
                              "type": "function (uint256) payable external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24774,
                                  "type": "contract ICryptoPunksMarket",
                                  "value": "punkToken"
                                },
                                "id": 24789,
                                "name": "Identifier",
                                "src": "802:9:152"
                              }
                            ],
                            "id": 24791,
                            "name": "MemberAccess",
                            "src": "802:17:152"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 24760,
                              "type": "uint256",
                              "value": "punkIndex"
                            },
                            "id": 24792,
                            "name": "Identifier",
                            "src": "820:9:152"
                          }
                        ],
                        "id": 24793,
                        "name": "FunctionCall",
                        "src": "802:28:152"
                      }
                    ],
                    "id": 24794,
                    "name": "ExpressionStatement",
                    "src": "802:28:152"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferPunk",
                              "referencedDeclaration": 7719,
                              "type": "function (address,uint256) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24774,
                                  "type": "contract ICryptoPunksMarket",
                                  "value": "punkToken"
                                },
                                "id": 24795,
                                "name": "Identifier",
                                "src": "888:9:152"
                              }
                            ],
                            "id": 24797,
                            "name": "MemberAccess",
                            "src": "888:22:152"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 24751,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 24798,
                            "name": "Identifier",
                            "src": "911:2:152"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 24760,
                              "type": "uint256",
                              "value": "punkIndex"
                            },
                            "id": 24799,
                            "name": "Identifier",
                            "src": "915:9:152"
                          }
                        ],
                        "id": 24800,
                        "name": "FunctionCall",
                        "src": "888:37:152"
                      }
                    ],
                    "id": 24801,
                    "name": "ExpressionStatement",
                    "src": "888:37:152"
                  }
                ],
                "id": 24802,
                "name": "Block",
                "src": "457:475:152"
              }
            ],
            "id": 24803,
            "name": "FunctionDefinition",
            "src": "353:579:152"
          }
        ],
        "id": 24804,
        "name": "ContractDefinition",
        "src": "287:647:152"
      }
    ],
    "id": 24805,
    "name": "SourceUnit",
    "src": "33:901:152"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "1": {
      "links": {},
      "address": "0xdf907c1b541b1843b511d115e2fef78a6a830772",
      "transactionHash": "0x8be1d92edab6a31900b8054d3815c049a71e7b780254879854f065df62a260b6",
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      }
    },
    "4": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xCBe1c04934D0390cf6c7D071AC8bb7047f64111E",
      "transactionHash": "0xcd53def76260797574fc09d9daf0df9d846a331918c0cfc0f1bff2db36488053"
    },
    "5": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x2a637699D8f931AD731a80919a58BACe20B365F3",
      "transactionHash": "0xd9df838f16f475e7fd2728c4c63ee11a085a793b6e8596d69a8220b55c52b0fd"
    },
    "1337": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xbDC9d365aD6131D1078409521e2432b154439F05",
      "transactionHash": "0x58a9258bd335149473fd664928019c01c9d75d435e1b30180931e5f6ba8143ea"
    },
    "200500": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x55eB2809896aB7414706AaCDde63e3BBb26e0BC6",
      "transactionHash": "0x9e9e7f7bc3f8c384ca37dbcb3ec9d6fc16f31f231895d245991eab71905395e8"
    },
    "300500": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x44be0e540DfA005D97Fde86CdD058F7E1A71A317",
      "transactionHash": "0xcbdbf6c3106b858f1df28e53d7ed4eee975489fc35cd1e85b080d29ffeff714a"
    },
    "300501": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x44a72AEb7dAc73c4b72f89d6855dE063949627F3",
      "transactionHash": "0x82d716de3fc47b189eee19063ff7cab7ea2908f53edc98e1faf376bc6ae533fe"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-09-16T13:18:49.967Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}